_getenv(env_name)
extract environment name from the list;
search through environment name list, if name exists
get the value from the index where name was found extract the name and return the value;
if the name doesnt exists on the list return NULL;

print_dir(path)
split path into separate strings
print each string or token to stdout

link_path(path)
create a linkedlist struct;
traverse the list adding directory to data and address to next node pointing to dir then ptr points to next dir.

_setenv(name, value, overwrite)
search through environ variables for name
if name matches var string before (=) and overwrite set to 1, replace string after (=) with value else if overwrite set to zero return (0);
else if name does not match any string and environ[i] = NULL, environ[i] = name=value, return (0)
OR
make copy of env, strtok copy for name before =,if found and overwrite set to 1; environ[i]= name=value, else if set to zero break; else if not found and envcopy[i] == null, env[i] = name=value;

simple_shell:
task1 - 
Display prompt and wait for user input
Loop prompt
Handle error
Handle end_of_file condition